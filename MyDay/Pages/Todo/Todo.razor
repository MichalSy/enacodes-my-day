@page "/todo"

@using MyDay.Pages.Todo.Model;

<div class="toolbar d-flex">
    <div class="toolbar-action" @onclick="@(() => this.AddNewBucket())">
        <i class="bi bi-plus"></i>
        <span>Add new bucket</span>
    </div>
</div>

@if (this.Buckets is null || this.Buckets.Any() is false)
{
    <div class="d-flex align-items-center justify-content-center">
        <div class="text-secondary text-opacity-50">
            <strong>No data found</strong>
        </div>
    </div>
}
else
{
    <div class="todo-container d-flex justify-content-between">
        @foreach (var bucket in this.Buckets)
        {
            <div class="todo-bucket">
                <div class="todo-bucket-name d-flex justify-content-start">
                    <strong>@bucket.Name</strong>
                </div>

                <div class="todo-bucket-items">
                    <div class="todo-item" @onclick="@(() => this.AddNewTask(bucket))">
                        <div class="add-todo-item d-inline-flex">
                            <i class="bi bi-plus"></i>
                            <span>Add task</span>
                        </div>
                    </div>
                    @foreach (var item in bucket.TodoItems)
                    {
                        <div class="todo-item flex-column" @onclick="@(() => this.ShowTaskDetails(item))">
                            <div class="p-2">@item.Name</div>
                            <div class="p-2 text-truncate">
                                @item.Description
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Bucket> Buckets { get; } = new List<Bucket>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private void AddNewBucket()
    {
        this.Buckets.Add(new Bucket
            {
                Name = "New Bucket",
                TodoItems = new List<TodoItem>
                {
                    new TodoItem
                    {
                        Name = "Make me today",
                        Description = "This is some bla bla text to read. Since I don't know what to write, I am just wasting some time writing words instead of just copying some text from internet.",
                        Status = TodoStatus.NotStarted
                    }
                }
            });
    }

    private void AddNewTask(Bucket bucket)
    {
        bucket.TodoItems.Add(new TodoItem
        {
            Name = "Make me today second time",
            Description = "This time some shorter text.",
            Status = TodoStatus.NotStarted
        });
    }

    private void ShowTaskDetails(TodoItem todoItem)
    {
        
    }
}
